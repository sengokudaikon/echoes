use rdev::Key;
use crate::config::KeyCode;

pub fn keycode_to_rdev_key(keycode: KeyCode) -> Key {
    match keycode {
        // Control keys
        KeyCode::ControlLeft => Key::ControlLeft,
        KeyCode::ControlRight => Key::ControlRight,
        KeyCode::ShiftLeft => Key::ShiftLeft,
        KeyCode::ShiftRight => Key::ShiftRight,
        KeyCode::Alt => Key::Alt,
        KeyCode::AltGr => Key::AltGr,
        KeyCode::MetaLeft => Key::MetaLeft,
        KeyCode::MetaRight => Key::MetaRight,
        
        // Special keys
        KeyCode::Space => Key::Space,
        KeyCode::Tab => Key::Tab,
        KeyCode::Return => Key::Return,
        KeyCode::Escape => Key::Escape,
        KeyCode::Backspace => Key::Backspace,
        KeyCode::Delete => Key::Delete,
        KeyCode::Insert => Key::Insert,
        KeyCode::Home => Key::Home,
        KeyCode::End => Key::End,
        KeyCode::PageUp => Key::PageUp,
        KeyCode::PageDown => Key::PageDown,
        KeyCode::CapsLock => Key::CapsLock,
        
        // Arrow keys
        KeyCode::UpArrow => Key::UpArrow,
        KeyCode::DownArrow => Key::DownArrow,
        KeyCode::LeftArrow => Key::LeftArrow,
        KeyCode::RightArrow => Key::RightArrow,
        
        // Function keys
        KeyCode::F1 => Key::F1,
        KeyCode::F2 => Key::F2,
        KeyCode::F3 => Key::F3,
        KeyCode::F4 => Key::F4,
        KeyCode::F5 => Key::F5,
        KeyCode::F6 => Key::F6,
        KeyCode::F7 => Key::F7,
        KeyCode::F8 => Key::F8,
        KeyCode::F9 => Key::F9,
        KeyCode::F10 => Key::F10,
        KeyCode::F11 => Key::F11,
        KeyCode::F12 => Key::F12,
        
        // Letters
        KeyCode::A => Key::KeyA,
        KeyCode::B => Key::KeyB,
        KeyCode::C => Key::KeyC,
        KeyCode::D => Key::KeyD,
        KeyCode::E => Key::KeyE,
        KeyCode::F => Key::KeyF,
        KeyCode::G => Key::KeyG,
        KeyCode::H => Key::KeyH,
        KeyCode::I => Key::KeyI,
        KeyCode::J => Key::KeyJ,
        KeyCode::K => Key::KeyK,
        KeyCode::L => Key::KeyL,
        KeyCode::M => Key::KeyM,
        KeyCode::N => Key::KeyN,
        KeyCode::O => Key::KeyO,
        KeyCode::P => Key::KeyP,
        KeyCode::Q => Key::KeyQ,
        KeyCode::R => Key::KeyR,
        KeyCode::S => Key::KeyS,
        KeyCode::T => Key::KeyT,
        KeyCode::U => Key::KeyU,
        KeyCode::V => Key::KeyV,
        KeyCode::W => Key::KeyW,
        KeyCode::X => Key::KeyX,
        KeyCode::Y => Key::KeyY,
        KeyCode::Z => Key::KeyZ,
        
        // Numbers
        KeyCode::Num0 => Key::Num0,
        KeyCode::Num1 => Key::Num1,
        KeyCode::Num2 => Key::Num2,
        KeyCode::Num3 => Key::Num3,
        KeyCode::Num4 => Key::Num4,
        KeyCode::Num5 => Key::Num5,
        KeyCode::Num6 => Key::Num6,
        KeyCode::Num7 => Key::Num7,
        KeyCode::Num8 => Key::Num8,
        KeyCode::Num9 => Key::Num9,
        
        // Symbols
        KeyCode::Slash => Key::Slash,
        KeyCode::BackSlash => Key::BackSlash,
        KeyCode::Equal => Key::Equal,
        KeyCode::Minus => Key::Minus,
        KeyCode::Comma => Key::Comma,
        KeyCode::Dot => Key::Dot,
        KeyCode::SemiColon => Key::SemiColon,
        KeyCode::Quote => Key::Quote,
        KeyCode::LeftBracket => Key::LeftBracket,
        KeyCode::RightBracket => Key::RightBracket,
        KeyCode::BackQuote => Key::BackQuote,
    }
}

pub fn rdev_key_to_keycode(key: Key) -> Option<KeyCode> {
    match key {
        // Control keys
        Key::ControlLeft => Some(KeyCode::ControlLeft),
        Key::ControlRight => Some(KeyCode::ControlRight),
        Key::ShiftLeft => Some(KeyCode::ShiftLeft),
        Key::ShiftRight => Some(KeyCode::ShiftRight),
        Key::Alt => Some(KeyCode::Alt),
        Key::AltGr => Some(KeyCode::AltGr),
        Key::MetaLeft => Some(KeyCode::MetaLeft),
        Key::MetaRight => Some(KeyCode::MetaRight),
        
        // Special keys
        Key::Space => Some(KeyCode::Space),
        Key::Tab => Some(KeyCode::Tab),
        Key::Return => Some(KeyCode::Return),
        Key::Escape => Some(KeyCode::Escape),
        Key::Backspace => Some(KeyCode::Backspace),
        Key::Delete => Some(KeyCode::Delete),
        Key::Insert => Some(KeyCode::Insert),
        Key::Home => Some(KeyCode::Home),
        Key::End => Some(KeyCode::End),
        Key::PageUp => Some(KeyCode::PageUp),
        Key::PageDown => Some(KeyCode::PageDown),
        Key::CapsLock => Some(KeyCode::CapsLock),
        
        // Arrow keys
        Key::UpArrow => Some(KeyCode::UpArrow),
        Key::DownArrow => Some(KeyCode::DownArrow),
        Key::LeftArrow => Some(KeyCode::LeftArrow),
        Key::RightArrow => Some(KeyCode::RightArrow),
        
        // Function keys
        Key::F1 => Some(KeyCode::F1),
        Key::F2 => Some(KeyCode::F2),
        Key::F3 => Some(KeyCode::F3),
        Key::F4 => Some(KeyCode::F4),
        Key::F5 => Some(KeyCode::F5),
        Key::F6 => Some(KeyCode::F6),
        Key::F7 => Some(KeyCode::F7),
        Key::F8 => Some(KeyCode::F8),
        Key::F9 => Some(KeyCode::F9),
        Key::F10 => Some(KeyCode::F10),
        Key::F11 => Some(KeyCode::F11),
        Key::F12 => Some(KeyCode::F12),
        
        // Letters
        Key::KeyA => Some(KeyCode::A),
        Key::KeyB => Some(KeyCode::B),
        Key::KeyC => Some(KeyCode::C),
        Key::KeyD => Some(KeyCode::D),
        Key::KeyE => Some(KeyCode::E),
        Key::KeyF => Some(KeyCode::F),
        Key::KeyG => Some(KeyCode::G),
        Key::KeyH => Some(KeyCode::H),
        Key::KeyI => Some(KeyCode::I),
        Key::KeyJ => Some(KeyCode::J),
        Key::KeyK => Some(KeyCode::K),
        Key::KeyL => Some(KeyCode::L),
        Key::KeyM => Some(KeyCode::M),
        Key::KeyN => Some(KeyCode::N),
        Key::KeyO => Some(KeyCode::O),
        Key::KeyP => Some(KeyCode::P),
        Key::KeyQ => Some(KeyCode::Q),
        Key::KeyR => Some(KeyCode::R),
        Key::KeyS => Some(KeyCode::S),
        Key::KeyT => Some(KeyCode::T),
        Key::KeyU => Some(KeyCode::U),
        Key::KeyV => Some(KeyCode::V),
        Key::KeyW => Some(KeyCode::W),
        Key::KeyX => Some(KeyCode::X),
        Key::KeyY => Some(KeyCode::Y),
        Key::KeyZ => Some(KeyCode::Z),
        
        // Numbers
        Key::Num0 => Some(KeyCode::Num0),
        Key::Num1 => Some(KeyCode::Num1),
        Key::Num2 => Some(KeyCode::Num2),
        Key::Num3 => Some(KeyCode::Num3),
        Key::Num4 => Some(KeyCode::Num4),
        Key::Num5 => Some(KeyCode::Num5),
        Key::Num6 => Some(KeyCode::Num6),
        Key::Num7 => Some(KeyCode::Num7),
        Key::Num8 => Some(KeyCode::Num8),
        Key::Num9 => Some(KeyCode::Num9),
        
        // Symbols
        Key::Slash => Some(KeyCode::Slash),
        Key::BackSlash => Some(KeyCode::BackSlash),
        Key::Equal => Some(KeyCode::Equal),
        Key::Minus => Some(KeyCode::Minus),
        Key::Comma => Some(KeyCode::Comma),
        Key::Dot => Some(KeyCode::Dot),
        Key::SemiColon => Some(KeyCode::SemiColon),
        Key::Quote => Some(KeyCode::Quote),
        Key::LeftBracket => Some(KeyCode::LeftBracket),
        Key::RightBracket => Some(KeyCode::RightBracket),
        Key::BackQuote => Some(KeyCode::BackQuote),
        
        _ => None, // Unknown keys
    }
}

pub fn key_from_string(s: &str) -> Option<Key> {
    match s {
        // Control keys
        "ControlLeft" | "Ctrl" | "Control" => Some(Key::ControlLeft),
        "ControlRight" => Some(Key::ControlRight),
        "ShiftLeft" | "Shift" => Some(Key::ShiftLeft),
        "ShiftRight" => Some(Key::ShiftRight),
        "Alt" | "Option" => Some(Key::Alt),
        "AltGr" => Some(Key::AltGr),
        "MetaLeft" | "Cmd" | "Command" | "Super" => Some(Key::MetaLeft),
        "MetaRight" => Some(Key::MetaRight),
        
        // Special keys
        "Space" => Some(Key::Space),
        "Tab" => Some(Key::Tab),
        "Return" | "Enter" => Some(Key::Return),
        "Escape" | "Esc" => Some(Key::Escape),
        "Backspace" => Some(Key::Backspace),
        "Delete" => Some(Key::Delete),
        "Insert" => Some(Key::Insert),
        "Home" => Some(Key::Home),
        "End" => Some(Key::End),
        "PageUp" => Some(Key::PageUp),
        "PageDown" => Some(Key::PageDown),
        "CapsLock" => Some(Key::CapsLock),
        
        // Arrow keys
        "ArrowUp" | "Up" => Some(Key::UpArrow),
        "ArrowDown" | "Down" => Some(Key::DownArrow),
        "ArrowLeft" | "Left" => Some(Key::LeftArrow),
        "ArrowRight" | "Right" => Some(Key::RightArrow),
        
        // Function keys
        "F1" => Some(Key::F1),
        "F2" => Some(Key::F2),
        "F3" => Some(Key::F3),
        "F4" => Some(Key::F4),
        "F5" => Some(Key::F5),
        "F6" => Some(Key::F6),
        "F7" => Some(Key::F7),
        "F8" => Some(Key::F8),
        "F9" => Some(Key::F9),
        "F10" => Some(Key::F10),
        "F11" => Some(Key::F11),
        "F12" => Some(Key::F12),
        
        // Letters
        "A" | "a" => Some(Key::KeyA),
        "B" | "b" => Some(Key::KeyB),
        "C" | "c" => Some(Key::KeyC),
        "D" | "d" => Some(Key::KeyD),
        "E" | "e" => Some(Key::KeyE),
        "F" | "f" => Some(Key::KeyF),
        "G" | "g" => Some(Key::KeyG),
        "H" | "h" => Some(Key::KeyH),
        "I" | "i" => Some(Key::KeyI),
        "J" | "j" => Some(Key::KeyJ),
        "K" | "k" => Some(Key::KeyK),
        "L" | "l" => Some(Key::KeyL),
        "M" | "m" => Some(Key::KeyM),
        "N" | "n" => Some(Key::KeyN),
        "O" | "o" => Some(Key::KeyO),
        "P" | "p" => Some(Key::KeyP),
        "Q" | "q" => Some(Key::KeyQ),
        "R" | "r" => Some(Key::KeyR),
        "S" | "s" => Some(Key::KeyS),
        "T" | "t" => Some(Key::KeyT),
        "U" | "u" => Some(Key::KeyU),
        "V" | "v" => Some(Key::KeyV),
        "W" | "w" => Some(Key::KeyW),
        "X" | "x" => Some(Key::KeyX),
        "Y" | "y" => Some(Key::KeyY),
        "Z" | "z" => Some(Key::KeyZ),
        
        // Numbers
        "0" => Some(Key::Num0),
        "1" => Some(Key::Num1),
        "2" => Some(Key::Num2),
        "3" => Some(Key::Num3),
        "4" => Some(Key::Num4),
        "5" => Some(Key::Num5),
        "6" => Some(Key::Num6),
        "7" => Some(Key::Num7),
        "8" => Some(Key::Num8),
        "9" => Some(Key::Num9),
        
        // Symbols
        "/" | "Slash" => Some(Key::Slash),
        "\\" | "Backslash" => Some(Key::BackSlash),
        "=" | "Equal" => Some(Key::Equal),
        "-" | "Minus" => Some(Key::Minus),
        "," | "Comma" => Some(Key::Comma),
        "." | "Period" | "Dot" => Some(Key::Dot),
        ";" | "Semicolon" => Some(Key::SemiColon),
        "'" | "Quote" => Some(Key::Quote),
        "[" | "LeftBracket" => Some(Key::LeftBracket),
        "]" | "RightBracket" => Some(Key::RightBracket),
        "`" | "Grave" | "BackQuote" => Some(Key::BackQuote),
        
        _ => None,
    }
}

pub fn key_to_string(key: &Key) -> String {
    match key {
        Key::ControlLeft => "ControlLeft",
        Key::ControlRight => "ControlRight",
        Key::ShiftLeft => "ShiftLeft",
        Key::ShiftRight => "ShiftRight",
        Key::Alt => "Alt",
        Key::AltGr => "AltGr",
        Key::MetaLeft => "Cmd",
        Key::MetaRight => "CmdRight",
        Key::Space => "Space",
        Key::Tab => "Tab",
        Key::Return => "Enter",
        Key::Escape => "Escape",
        Key::Backspace => "Backspace",
        Key::Delete => "Delete",
        Key::Insert => "Insert",
        Key::Home => "Home",
        Key::End => "End",
        Key::PageUp => "PageUp",
        Key::PageDown => "PageDown",
        Key::CapsLock => "CapsLock",
        Key::UpArrow => "Up",
        Key::DownArrow => "Down",
        Key::LeftArrow => "Left",
        Key::RightArrow => "Right",
        Key::F1 => "F1",
        Key::F2 => "F2",
        Key::F3 => "F3",
        Key::F4 => "F4",
        Key::F5 => "F5",
        Key::F6 => "F6",
        Key::F7 => "F7",
        Key::F8 => "F8",
        Key::F9 => "F9",
        Key::F10 => "F10",
        Key::F11 => "F11",
        Key::F12 => "F12",
        Key::KeyA => "A",
        Key::KeyB => "B",
        Key::KeyC => "C",
        Key::KeyD => "D",
        Key::KeyE => "E",
        Key::KeyF => "F",
        Key::KeyG => "G",
        Key::KeyH => "H",
        Key::KeyI => "I",
        Key::KeyJ => "J",
        Key::KeyK => "K",
        Key::KeyL => "L",
        Key::KeyM => "M",
        Key::KeyN => "N",
        Key::KeyO => "O",
        Key::KeyP => "P",
        Key::KeyQ => "Q",
        Key::KeyR => "R",
        Key::KeyS => "S",
        Key::KeyT => "T",
        Key::KeyU => "U",
        Key::KeyV => "V",
        Key::KeyW => "W",
        Key::KeyX => "X",
        Key::KeyY => "Y",
        Key::KeyZ => "Z",
        Key::Num0 => "0",
        Key::Num1 => "1",
        Key::Num2 => "2",
        Key::Num3 => "3",
        Key::Num4 => "4",
        Key::Num5 => "5",
        Key::Num6 => "6",
        Key::Num7 => "7",
        Key::Num8 => "8",
        Key::Num9 => "9",
        Key::Slash => "/",
        Key::BackSlash => "\\",
        Key::Equal => "=",
        Key::Minus => "-",
        Key::Comma => ",",
        Key::Dot => ".",
        Key::SemiColon => ";",
        Key::Quote => "'",
        Key::LeftBracket => "[",
        Key::RightBracket => "]",
        Key::BackQuote => "`",
        _ => "Unknown",
    }.to_string()
}